
intime@master:~$ minikube start --nodes 2 -p multinode-demo
😄  [multinode-demo] minikube v1.24.0 on Ubuntu 20.04 (vbox/amd64)
✨  Using the docker driver based on user configuration
👍  Starting control plane node multinode-demo in cluster multinode-demo
🚜  Pulling base image ...
🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
🐳  Preparing Kubernetes v1.22.3 on Docker 20.10.8 ...
    ▪ Generating certificates and keys ...
    ▪ Booting up control plane ...
    ▪ Configuring RBAC rules ...
🔗  Configuring CNI (Container Networking Interface) ...
🔎  Verifying Kubernetes components...
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
🌟  Enabled addons: storage-provisioner, default-storageclass

👍  Starting worker node multinode-demo-m02 in cluster multinode-demo
🚜  Pulling base image ...
🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
🌐  Found network options:
    ▪ NO_PROXY=192.168.58.2
🐳  Preparing Kubernetes v1.22.3 on Docker 20.10.8 ...
    ▪ env NO_PROXY=192.168.58.2
🔎  Verifying Kubernetes components...
🏄  Done! kubectl is now configured to use "multinode-demo" cluster and "default" namespace by default


intime@master:~$ kubectl get nodes
NAME                 STATUS     ROLES                  AGE   VERSION
multinode-demo       NotReady   control-plane,master   42s   v1.22.3
multinode-demo-m02   NotReady   <none>                 19s   v1.22.3


intime@master:~$ minikube status -p multinode-demo
multinode-demo
type: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured

multinode-demo-m02
type: Worker
host: Running
kubelet: Running

intime@master:~$ kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.10
deployment.apps/hello-minikube created

intime@master:~$ kubectl get nodes
NAME                 STATUS   ROLES                  AGE     VERSION
multinode-demo       Ready    control-plane,master   3m17s   v1.22.3
multinode-demo-m02   Ready    <none>                 2m54s   v1.22.3


intime@master:~$ kubectl get service
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   3m25s


intime@master:~$ kubectl expose deployment hello-minikube --type=NodePort --port=8080
service/hello-minikube exposed

intime@master:~$ kubectl get service
NAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
hello-minikube   NodePort    10.101.212.94   <none>        8080:32363/TCP   4s
kubernetes       ClusterIP   10.96.0.1       <none>        443/TCP          3m45s


intime@master:~$ kubectl get pods
NAME                              READY   STATUS             RESTARTS   AGE
hello-minikube-5d9b964bfb-vfn7s   0/1     ImagePullBackOff   0          106s


intime@master:~$ kubectl get service
NAME             TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
hello-minikube   NodePort    10.101.212.94   <none>        8080:32363/TCP   87s
kubernetes       ClusterIP   10.96.0.1       <none>        443/TCP          5m8s

intime@master:~$ kubectl get pods
NAME                              READY   STATUS             RESTARTS   AGE     IP           NODE                 NOMINATED NODE   READINESS GATES
hello-minikube-5d9b964bfb-vfn7s   0/1     ImagePullBackOff   0          2m30s   10.244.1.3   multinode-demo-m02   <none>           <none>


intime@master:~$ minikube service list -p multinode-demo
|-------------|----------------|--------------|---------------------------|
|  NAMESPACE  |      NAME      | TARGET PORT  |            URL            |
|-------------|----------------|--------------|---------------------------|
| default     | hello-minikube |         8080 | http://192.168.58.2:32363 |
| default     | kubernetes     | No node port |
| kube-system | kube-dns       | No node port |
|-------------|----------------|--------------|---------------------------|
