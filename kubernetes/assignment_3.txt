-----> Create configmaps and secrets and volumes and assign to created pods.


intime@master:~$ sudo vi cm.yml

intime@master:~$ cat cm.yml 
apiVersion: v1
data:
  key1: value1
  key2: |
   this is key2 data
   data
kind: ConfigMap
metadata:
  name: myconfig 
  namespace: default

intime@master:~$ kubectl apply -f cm.yml
configmap/myconfig created

intime@master:~$ kubectl get cm
NAME               DATA   AGE
cm1                1      20m
databseconfig      1      61m
fierstconfigmap    1      78m
folderconfig       2      46m
kube-root-ca.crt   1      13h
myconfig           2      14s
secondconfigmap    3      74m

------>

intime@master:~$ sudo vi mypod.yml

intime@master:~$ cat mypod.yml 
apiVersion: v1
kind: Pod
metadata:
  name: mypod
spec:
  containers:
      - name: podcontainer
        image: nginx
        env: 
         - name: variablefrom
           valueFrom:
             configMapKeyRef:
              name: myconfig
              key: key2

intime@master:~$ kubectl apply -f mypod.yml
pod/mypod created

intime@master:~$ kubectl get pods
NAME                                READY   STATUS         RESTARTS       AGE
mypod                               0/1     ErrImagePull   0              12s

intime@master:~$ kubectl exec -it mypod -- bash

root@mypod:/# ls
bin   docker-entrypoint.d   home   media  proc	sbin  tmp
boot  docker-entrypoint.sh  lib    mnt	  root	srv   usr
dev   etc		    lib64  opt	  run	sys   var


root@mypod:/# env
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_SERVICE_PORT=443
NGINX_SERVICE_PORT_80_TCP_ADDR=10.105.229.245
HOSTNAME=mypod
NGINX_SERVICE_PORT_80_TCP=tcp://10.105.229.245:80
NGINX_SERVICE_SERVICE_HOST=10.105.229.245
PWD=/
NGINX_SERVICE_PORT_80_TCP_PROTO=tcp
PKG_RELEASE=1~bullseye
HOME=/root
NGINX_SERVICE_PORT_80_TCP_PORT=80
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
NGINX_SERVICE_SERVICE_PORT=80
NGINX_SERVICE_PORT=tcp://10.105.229.245:80
NJS_VERSION=0.7.1
TERM=xterm
SHLVL=1
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PORT=443
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_VERSION=1.21.5
variablefrom=this is key2 data
data

_=/usr/bin/env

root@mypod:/# echo $variablefrom
this is key2 data data

root@mypod:/# exit
exit


----->

intime@master:~$ kubectl create secret generic filesecret2 --from-literal=databasepasseord=mypassword123 --from-literal=databaseuser=root -o yaml >secret.yml

intime@master:~$ ls
 apiVersion:   Dockerfile        index.html             mypod.yml    Templates
 app.txt       Documents         jenkins_volume         Pictures     Videos
 certs         Downloads        'kubern...<?xml'        properties
 cm.yml        env.sh            minikube-linux-amd64   Public
 Desktop       filename.tar.gz   Music                  secret.yml

intime@master:~$ cat secret.yml 
apiVersion: v1
data:
  databasepasseord: bXlwYXNzd29yZDEyMw==
  databaseuser: cm9vdA==
kind: Secret
metadata:
  creationTimestamp: "2022-01-11T08:01:56Z"
  name: filesecret2
  namespace: default
  resourceVersion: "12193"
  uid: 017571b7-d213-4bba-a1f4-b38f1c93e7d8
type: Opaque

intime@master:~$ sudo vi secret.yml 

intime@master:~$ cat secret.yml 
apiVersion: v1
data:
  databasepasseord: bXlwYXNzd29yZDEyMw==
  databaseuser: cm9vdA==
kind: Secret
metadata:
  creationTimestamp: "2022-01-11T08:01:56Z"
  name: mysec


intime@master:~$ kubectl apply -f secret.yml 
secret/mysec created
intime@master:~$ kubectl get secretes
error: the server doesn't have a resource type "secretes"

intime@master:~$ kubectl get secret
NAME                  TYPE                                  DATA   AGE
default-token-w7pzm   kubernetes.io/service-account-token   3      15h
filesecret            Opaque                                1      9m46s
filesecret2           Opaque                                2      4m24s
first                 Opaque                                1      18m
mysec                 Opaque                                2      14s


intime@master:~$ sudo vi mypod.yml 

intime@master:~$ cat mypod.yml 
apiVersion: v1
kind: Pod
metadata:
  name: mypod
spec:
  containers:
      - name: podcontainer
        image: nginx
        env:
         - name: secretfrom
           valueFrom:
             secretKeyRef:
               name: first
               key: name

intime@master:~$ kubectl exec -it mypod /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
root@mypod:/# env
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_SERVICE_PORT=443
NGINX_SERVICE_PORT_80_TCP_ADDR=10.105.229.245
HOSTNAME=mypod
NGINX_SERVICE_PORT_80_TCP=tcp://10.105.229.245:80
NGINX_SERVICE_SERVICE_HOST=10.105.229.245
PWD=/
NGINX_SERVICE_PORT_80_TCP_PROTO=tcp
PKG_RELEASE=1~bullseye
HOME=/root
NGINX_SERVICE_PORT_80_TCP_PORT=80
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
NGINX_SERVICE_SERVICE_PORT=80
NGINX_SERVICE_PORT=tcp://10.105.229.245:80
NJS_VERSION=0.7.1
TERM=xterm
SHLVL=1
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
secretfrom=mikki
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PORT=443
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_VERSION=1.21.5
_=/usr/bin/env

root@mypod:/# exit
exit


---->

intime@master:~$ sudo vi main.yml

intime@master:~$ cat main.yml 
apiVersion: v1
kind: Pod
metadata:

  name: mypod2 
spec:
  containers:
      - name: podcontainer2
        image: nginx
        volumeMounts:


          - name: myvolume
            mountPath: /secret
  volumes:
    - name: myvolume
      secret:
        secretName: filesecret2

intime@master:~$ kubectl create -f main.yml
pod/mypod2 created

intime@master:~$ kubectl get pods
NAME                                READY   STATUS              RESTARTS        AGE
mypod                               1/1     Running             0               40m
mypod2                              0/1     ContainerCreating   0               4s
nginx-deployment-84cd76b964-q7vxl   1/1     Running             1 (4h27m ago)   14h


intime@master:~$ kubectl get pods
NAME                                READY   STATUS    RESTARTS        AGE
mypod                               1/1     Running   0               42m
mypod2                              1/1     Running   0               113s
nginx-deployment-84cd76b964-q7vxl   1/1     Running   1 (4h29m ago)   14h

intime@master:~$ kubectl exec -it mypod2 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
root@mypod2:/# ls 
bin  boot  dev	docker-entrypoint.d  docker-entrypoint.sh  etc	home  lib  lib64  media  mnt  opt  proc  root  run  sbin  secret  srv  sys  tmp  usr  var
root@mypod2:/# cd secret/
root@mypod2:/secret# ls
databasepasseord  databaseuser
root@mypod2:/secret# cat databaseuser 
rootroot@mypod2:/secret# exit
exit

intime@master:~$ cat main.yml 










